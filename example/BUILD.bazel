package(default_visibility = ["//visibility:public"])

load("@rules_ocaml//build:rules.bzl",
     "ocaml_ns_archive",
     "ocaml_module",
     "ocaml_signature",
     "ocaml_test",
     "ppx_executable",
)

LIBNAME = "ppx-bench-lib"
PPX_ARGS = ["-inline-test-lib", LIBNAME]
DEPS_1 = ["@core//lib/core"]

ocaml_test(
    name = "ppx_bench_sample_test",
    prologue = [
        ":Ppx_bench_sample",
        # "@ppx_inline_test//lib/runner/lib",
    ],
    # main = "@ppx_inline_test//lib/runner",
    main = "@core_bench//lib/runner",
    args = ["inline-test-runner", LIBNAME],
    timeout = "short"
)

######################## Modules & Signatures ########################
ocaml_module(
    name          = "Ppx_bench_sample",
    struct        = "ppx_bench_sample.ml",
    sig           = ":Ppx_bench_sample_cmi",
    deps          = DEPS_1,
    ppx           = ":ppx.exe",
    ppx_args      = PPX_ARGS + ["-loc-filename", "ppx_bench_sample.ml"],
)

ocaml_signature(
    name          = "Ppx_bench_sample_cmi",
    src           = "ppx_bench_sample.mli",
    deps          = DEPS_1,
    ppx           = ":ppx.exe",
)



###############
ppx_executable(
    name    = "ppx.exe",
    main    = "@ppxlib//lib/runner",
    prologue = [
        "//src:ppx_bench"
    ],
)
